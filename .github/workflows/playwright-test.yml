name: Run Playwright Tests

on:
  workflow_call:

env:
  user_manual_branch: 'tmp_user_manuel'
  published_folder: 'playwright_java/build/docs'

jobs:
  lancement-appli-et-test:
    runs-on: ubuntu-latest
    container:
      image: mcr.microsoft.com/playwright:v1.32.0-focal

    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-java@v3
        with:
          distribution: 'adopt'
          java-version: 17

      - name: Préparation Gradle
        uses: gradle/gradle-build-action@v2
      - name: Lancement de l'application
        run: |
          ./gradlew bootRun --args="--spring.config.location=file://$(pwd)/playwright_java/src/test/resources/application-for-playwright.properties" &

      - name: Test attente de la disponibilité de l'application
        shell: bash
        run: |
          set +e          
          retry=0;
          url=http://localhost:8080/formations
          while [ $retry -lt 10 -a "0" != "$(curl -s -S -o /dev/null $url;echo $?)" ]; do ((retry++));echo "Wait($retry)...";sleep 5; done
          curl -S -o /dev/null $url

      - name: Préparation Gradle
        uses: gradle/gradle-build-action@v2
      - name: Run tests
        run: |
          cd playwright_java
          ./gradlew test
          
      # Enregistrement de la documentation
      - name: Configure Git
        run: |
          git config --global --add safe.directory $(realpath .)
          git config user.email github-action@github.com
          git config user.name github-action

      - name: Création d'une branche contenant la documentation
        shell: bash
        run: |
          set +e
          git branch -D ${{env.user_manual_branch}} 2>/dev/null
          git checkout -b ${{env.user_manual_branch}}

      - name: Ajout de la documentation à la branche
        run: |
          mv ${{env.published_folder}} docs/ihm
          cd docs/ihm
          touch index.tmp
          echo "ifndef::ROOT_PATH[:ROOT_PATH: .]" >> index.tmp
          echo "= Manuel utilisateur" >> index.tmp
          for file in *.adoc; do echo "include::{ROOT_PATH}/$(basename "$file")[leveloffset=+1]" >> index.tmp; done
          mv index.tmp index.adoc
          cd ../..
          git add docs/ihm
          git commit -m "Update user manual"
          git push -f origin ${{env.user_manual_branch}}

 
